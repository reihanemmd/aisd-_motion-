<depend>rclpy</depend>
<depend>geometry_msgs</depend>
<depend>aisd_msgs</depend>
entry_points={
    'console_scripts': [
        'move = aisd_motion.move:main',
    ],
},
import rclpy
from rclpy.node import Node
from aisd_msgs.msg import Hand
from geometry_msgs.msg import Twist

class MoveNode(Node):
    def __init__(self):
        super().__init__('move')
        self.subscriber = self.create_subscription(Hand, 'cmd_hand', self.listener_callback, 10)
        self.publisher = self.create_publisher(Twist, 'cmd_vel', 10)

    def listener_callback(self, msg):
        twist = Twist()
        if msg.xindex > 0.55:
            twist.angular.z = -0.1
        elif msg.xindex < 0.45:
            twist.angular.z = 0.1
        if msg.xindex > msg.xpinky:
            twist.linear.x = 0.5
        self.publisher.publish(twist)

def main(args=None):
    rclpy.init(args=args)
    node = MoveNode()
    rclpy.spin(node)
    node.destroy_node()
    rclpy.shutdown()
